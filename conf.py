from objects.cake import Cake
## MINIMO 3x3

ROWS= 3
COLS= 3

#execution Heuristics
AVRG_H1= 0.0000013244
AVRG_H2= 0.0000033909

LIST_CAKES = [
    Cake([3, 5, 2, 5,1,0]), Cake([1, 4, 4, 1,3,5]), Cake([1, 1, 1, 2,2,0]), Cake([1, 3, 4, 5,2,0]), Cake([2, 3, 2, 1,1,4]),
    Cake([4, 4, 1, 2,1,0]), Cake([0, 1, 3, 0,4,0]), Cake([5, 4, 3, 4,0,0]), Cake([1, 2, 3, 5,2,2]), Cake([3, 1, 4, 2,2,2])
]


# History of previously recorded time scores for default scenario
history={
    "Breadth First Search/1/3/3":26,  
    "Breadth First Search/2/3/3":3, 
    "A* heurstic 1/1/3/3":28,
    "A* heurstic 2/1/3/3":25,
    "A* heurstic 2/2/3/3":24,
    "GS heuristic 1/1/3/3":17,
    "GS heuristic 2/1/3/3":15,

    

}


''' 3x3
LIST_CAKES = [
    Cake([3, 5, 2, 5,1,0]), Cake([1, 4, 4, 1,3,5]), Cake([1, 1, 1, 2,2,0]), Cake([1, 3, 4, 5,2,0]), Cake([2, 3, 2, 1,1,4]),
    Cake([4, 4, 1, 2,1,0]), Cake([0, 1, 3, 0,4,0]), Cake([5, 4, 3, 4,0,0]), Cake([1, 2, 3, 5,2,2]), Cake([3, 1, 4, 2,2,2])
]

LEVEL 1
DFS:[(0, 0), (0, 1), (0, 2), (1, 0), (1, 2), (2, 0), (1, 1), (2, 1), (1, 1), (2, 2)] N: 681      SCORE: 2     Time: 00.12
BFS:[(1, 0), (0, 1), (0, 2), (2, 1), (1, 2), (0, 0), (1, 1), (1, 1), (2, 2), (1, 1)] N: 127465   SCORE: 8     Time: 26.01
A*1:[(0, 2), (1, 2), (2, 0), (2, 1), (2, 2), (1, 0), (1, 1), (2, 0), (0, 1), (0, 1)] N: 80249    SCORE: 4     Time: 28.29
A*2:[(1, 2), (2, 2), (1, 1), (2, 1), (0, 2), (0, 1), (1, 0), (1, 1), (1, 1), (0, 1)] N: 59158    SCORE: 6     Time: 24.70
GS1:[(1, 2), (2, 2), (1, 1), (2, 1), (0, 2), (0, 1), (1, 0), (1, 1), (1, 1), (0, 1)] N: 33553    SCORE: 6     Time: 17.82
GS2:[(2, 1), (2, 0), (1, 1), (1, 2), (0, 2), (0, 1), (1, 0), (1, 1), (1, 1), (0, 1)] N: 27144    SCORE: 6     Time: 15.24

LEVEL 2
DFS:[(1, 0), (2, 0), (1, 1), (2, 1), (0, 2), (0, 1), (1, 2), (1, 1), (1, 1), (0, 1)] N: 5991     SCORE: 3     Time: 1.08
BFS:[(1, 0), (2, 0), (1, 1), (2, 1), (0, 2), (0, 1), (1, 2), (1, 1), (1, 1), (0, 1)] N: 14972    SCORE: 6     Time: 2.98
A*1:[(1, 0), (2, 0), (1, 1), (2, 1), (0, 2), (0, 1), (1, 2), (1, 1), (1, 1), (0, 1)] N: 9523     SCORE: 6     Time: 3.14
A*2:[(1, 2), (2, 0), (1, 1), (2, 1), (0, 2), (0, 1), (1, 0), (1, 1), (1, 1), (0, 1)] N: 9523     SCORE: 6     Time: 3.00
GS1:[(1, 0), (2, 0), (1, 1), (2, 1), (0, 2), (0, 1), (1, 2), (1, 1), (1, 1), (0, 1)] N: 9523     SCORE: 6     Time: 3.06
GS2:[(1, 2), (2, 0), (1, 1), (2, 1), (0, 2), (0, 1), (1, 0), (1, 1), (1, 1), (0, 1)] N: 7948     SCORE: 6     Time: 2.80

LEVEL 3
DFS:[(0, 2), (1, 2), (2, 1), (0, 1), (2, 1), (1, 0), (1, 1), (1, 1), (1, 0), (2, 2)] N: 143      SCORE: 5     Time: 0.03  LEVEL 3
BFS:[(1, 0), (1, 3), (2, 2), (0, 2), (2, 2), (1, 1), (2, 0), (1, 2), (0, 1), (1, 2)] N: 487      SCORE: 10    Time: 0.09  LEVEL 3
A*1:[(0, 2), (1, 2), (2, 1), (0, 1), (2, 1), (1, 0), (1, 1), (1, 1), (1, 0), (2, 2)] N: 325      SCORE: 10    Time: 0.10
A*2:[(0, 2), (1, 2), (2, 1), (0, 1), (2, 1), (1, 0), (1, 1), (1, 1), (2, 2), (1, 0)] N: 325      SCORE: 10    Time: 0.10
GS1:[(0, 2), (1, 2), (2, 1), (0, 1), (2, 1), (1, 0), (1, 1), (1, 1), (1, 0), (2, 2)] N: 325      SCORE: 10    Time: 0.09
GS2:[(0, 2), (1, 2), (2, 1), (0, 1), (2, 1), (1, 0), (1, 1), (1, 1), (2, 2), (1, 0)] N: 297      SCORE: 10    Time: 0.09
'''